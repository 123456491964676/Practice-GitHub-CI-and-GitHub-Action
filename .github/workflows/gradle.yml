# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with javac

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Compile Java sources
      run: |
        # 创建编译输出目录
        mkdir -p build/classes
        
        # 编译根目录下的Main.java
        echo "Compiling Main.java..."
        javac -d build/classes Main.java
        
        # 显示编译结果
        echo "Compiled classes:"
        find build/classes -type f
    
    - name: Run Java application
      run: |
        # 获取Main类的完整名称（考虑包声明）
        # 如果Main.java中没有包声明，类名就是Main
        # 如果有包声明，会得到类似com.example.Main的类名
        CLASS_NAME=$(grep -r -m1 "public class" Main.java | \
                    awk -F'class ' '{print $2}' | \
                    awk '{print $1}' | \
                    tr -d '{' | tr -d '\r')
        
        if [ -z "$CLASS_NAME" ]; then
          CLASS_NAME="Main"
        fi
        
        # 如果Main.java中有包声明，需要添加包路径
        if grep -q "package" Main.java; then
          PACKAGE_PATH=$(grep -r -m1 "package" Main.java | \
                        awk -F'package ' '{print $2}' | \
                        awk -F';' '{print $1}' | \
                        tr -d '\r' | tr -d ' ')
          CLASS_NAME="${PACKAGE_PATH}.${CLASS_NAME}"
        fi
        
        echo "Running main class: $CLASS_NAME"
        java -cp build/classes $CLASS_NAME