# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with javac

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Compile Java sources
      run: |
        # 创建编译输出目录
        mkdir -p build/classes
        
        # 查找并编译所有Java文件
        find src -name "*.java" > sources.txt
        javac -d build/classes @sources.txt
        
        # 显示编译结果
        echo "Compiled classes:"
        find build/classes -type f | head -10
    
    - name: Run Java application
      run: |
        # 运行主类 (请替换为您的实际主类)
        java -cp build/classes com.example.Main
        
        # 或者使用通配符运行所有带main方法的类
        # find build/classes -name "*.class" | while read class; do
        #   classname=$(echo $class | sed 's/build\/classes\///; s/\.class$//; s/\//./g')
        #   echo "Running $classname:"
        #   java -cp build/classes $classname
        # done